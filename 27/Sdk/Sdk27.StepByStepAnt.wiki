= openMDX SDK 2.7 for Ant Step-by-Step =

This guide explains how to install and setup ''openMDX SDK 2.7'' step-by-step.

== Download ==

First, download the installer executables from [https://sourceforge.net/project/showfiles.php?group_id=75132 here]:

 * ''openmdxSdk-2.7.0-windows-installer.exe'' for Windows
 * ''openmdxSdk-2.7.0-linux-installer.bin'' for Linux

Before starting the installer make sure that you have installed
 * [http://java.sun.com/javase/downloads/widget/jdk6.jsp JDK 1.6]
 * [http://ant.apache.org/bindownload.cgi Apache Ant 1.8]
 * gcc required for Unix platforms only

== Installation ==

The installer first takes you to the welcome screen.

[[Image(Sdk27.StepByStepAnt.p001.png)]]

On the next screen specify the installation directory. In this guide we will install the examples on a Windows platform in the directory ''/tmp/SF/openmdxSdk-2.7.0''.

[[Image(Sdk27.StepByStepAnt.p002.png)]]

Specify the ''JDK 1.6'' home directory. You '''MUST''' specify the home directory of a full ''JDK 1.6'' installation. A '''JRE installation is NOT sufficient'''!

[[Image(Sdk27.StepByStepAnt.p003.png)]]

In the next screen specify the home directory of ''Apache Ant 1.8.0''.

[[Image(Sdk27.StepByStepAnt.p004.png)]]

At the end of the installation the installer executes a post-installation script. This script prepares and compiles all projects. If everything goes well your log should look like this sample output [attachment:Sdk27.StepByStepAnt.postinstallation-script-result.log]. Possible failure reasons are:
 * On Windows platforms the system environment variable ''JAVA_HOME'' does not point to a valid ''JDK 1.6''
 * During installation the ''JDK 1.6'' home or the ''Apache Ant 1.8.0'' home directory are not specified correctly
In any case, run uninstall, fix the error cause and run the installer again.

[[Image(Sdk27.StepByStepAnt.p005.png)]]

The ''README'' is shown during the last installation step. Read it! It says that ''openMDX SDK 2.7'' contains the ''openMDX/Core'' and ''openMDX/Example'' projects. All projects come with an ant ''build.xml'' accepting the following targets:
 * ''clean'': clean the project
 * ''install-src'': expand project source files
 * ''deliverables'': compile and build JARs
 * ''distribution'': compile, build JARs and distribution
 * ''config'': display the project settings

[[Image(Sdk27.StepByStepAnt.p006.png)]]

After successful installation the directory structure should look like the screen shown below. The top-level directories are:
 * ''openmdx-2.7.0\core''
 * ''openmdx-2.7.0\security''
 * ''openmdx-2.7.0\portal''
 * ''openmdx-2.7.0\openejb''
 * ''openmdx-2.7.0\test-core''
 * ''openmdx-example-2.7.0\helloworld'': contains the helloworld project
 * ''openmdx-example-2.7.0\workshop'': contains the workshop project

[[Image(Sdk27.StepByStepAnt.p007.png)]]

Now you are ready to build the projects and run the JUnit tests. Let's start with the ''helloworld'' project. Open a shell and run the following commands:
 * cd to the directory ''.\openmdxSdk-2.7.0\openmdx-example-2.7.0\helloworld''
 * Run ''ant deliverables''
 * Run ''ant test''

After running ant test your console should look like shown below. Compare your output with this sample output [attachment:Sdk27.StepByStepAnt.helloworld-ant-test.log].

[[Image(Sdk27.StepByStepAnt.p108.png)]]

Next we build and test the ''workshop'' project:
 * cd to the directory ''.\openmdxSdk-2.7.0\openmdx-example-2.7.0\workshop''
 * Run ''ant deliverables''
 * Run ''ant test''

After running ant test your console should look like shown below. Compare your output with this sample output [attachment:Sdk27.StepByStepAnt.workshop-ant-test-with-errors.log].

[[Image(Sdk27.StepByStepAnt.p110.png)]]

''ant test'' will report errors. The console output shows an URL pointing at the JUnit test report.

[[Image(Sdk27.StepByStepAnt.p111.png)]]

Open the report with a browser and navigate to the error log. The stack trace shows that we have a ''MEDIA_ACCESS_FAILURE'' exception and the description is ''Failure when getting a connection from 'java:comp/env/jdbc/datasource[0]'''. The workshop example tries to establish a database connection. However, this fails because we did not start the workshop database yet.

[[Image(Sdk27.StepByStepAnt.p115.png)]]

The database connection URL is hard-coded in the JUnit test driver ''!TestExample_1.java''. 
{{{
public TestExample_1(
	String name
) throws NamingException{
	super(name);
	if(!NamingManager.hasInitialContextFactoryBuilder()) {
		NonManagedInitialContextFactoryBuilder.install(
			Collections.singletonMap(
				"org.openmdx.comp.env.jdbc.jdbc_openmdx_example_workshop",
				"jdbc:hsqldb:hsql:\\/\\/127.0.0.1:9002\\/WORKSHOP?user=sa&password=manager99&driver=org.hsqldb.jdbcDriver"
			)
		);
	}
}  
}}}

Before we can run the test successfully we first have to start the ''HSQLDB'' database engine as follows:
 * Go to the directory ''.\openmdxSdk-2.7.0\openmdx-example-2.7.0\workshop\etc\data\workshop''
 * Run ''startdb.bat'' on Windows platforms and ''./startdb.sh'' on Linux platforms

[[Image(Sdk27.StepByStepAnt.p120.png)]]

We are now ready to run ant test for the project ''workshop'' again. This time the tests should complete without errors. Compare your console output with this sample output [attachment:Sdk27.StepByStepAnt.workshop-ant-test-no-errors.log].

You can also look at the database tables and data by launching the ''HSQLDB'' database manager:
 * Go to the directory ''.\openmdxSdk-2.7.0\openmdx-example-2.7.0\workshop\etc\data\workshop''
 * Run ''startdbmanager.bat'' on Windows platforms and ''./startdbmanager.sh'' on Linux platforms

[[Image(Sdk27.StepByStepAnt.p125.png)]]

If you want to start with an empty database you can create a new database with the following steps:
 * Run ''ant -Ddatabase.name="hsqldb-2" create-schema''.
 * Run the scripts ''dbcreate-tables.sql'', ''dbcreate-views.sql'' and ''populate-preferences.sql'' located in the directory ''.\openmdxSdk-2.7.0\openmdx-example-2.7.0\workshop\src\sql\hsqldb-2''

== Congratulations ==
Congratulations! You have successfully installed and prepared the ''openMDX SDK 2.7'' projects.
