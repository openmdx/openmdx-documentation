= openMDX SDK 2.4 / 2.5 for ''Tomcat+EJB'' Step-by-Step Guide =

This guide explains how to install, setup and deploy the examples of ''openMDX SDK 2.4 / 2.5'' on ''Tomcat+EJB''.

'''NOTE:''' The screenshots refer to version 2.4.

In this guide we use ''Apache Tomcat 6'' and ''Apache OpenEJB'' to deploy the sample applications. To make life easier for you, ''openMDX'' provides an installer which you can download from [https://sourceforge.net/project/showfiles.php?group_id=75132 here]:

=== Version 2.4: ===
 * ''openmdxTomcatLwc-2.4.0-windows-installer.exe'' for ''Windows''
 * ''openmdxTomcatLwc-2.4.0-linux-installer.bin'' for ''Linux''

=== Version 2.5: ===
 * ''openmdxTomcatLwc-2.5.0-windows-installer.exe'' for ''Windows''
 * ''openmdxTomcatLwc-2.5.0-linux-installer.bin'' for ''Linux''

However, if you prefer you can deploy the applications also on any other ''J2EE'' Application Server.

'''IMPORTANT:''' This guide assumes that the ''openMDX SDK 2.4 / 2.5'' projects are successfully setup as described in [wiki:Sdk24.StepByStepAnt openMDX SDK 2.4 / 2.5 for Ant Step-by-Step].

Open a shell and go to the directory ''.\openmdxSdk-2.4.0''. Set the environment by executing ''setenv.bat'' in Windows platforms and ''setenv.sh'' on Unix platforms.

Then go to the directory ''.\openmdxSdk-2.4.0\openmdx-example-2.4.0\helloworld''. Run the command ''ant assemble''. This builds the ''EARs'' which we will deploy on ''Tomcat+EJB''. The console output looks as shown below.

[[Image(Sdk24.StepByStepTomcat.pic090.gif)]]

The generated ''EAR'' is located in the directory ''.\openmdxSdk-2.4.0\openmdx-example-2.4.0\jre-1.5\helloworld\deployment-unit''. Copy the file ''openmdx-helloworld.ear'' to the directory ''.\openmdxTomcatLwc-2.4.0\apache-tomcat-6\apps'' as shown below:

[[Image(Sdk24.StepByStepTomcat.pic100.gif)]]

Next we have to add the user ''guest'' to the ''tomcat-user.xml'' which allows us to login to the ''helloworld'' application. Open the file ''.\openmdxTomcatLwc-2.4.0\apache-tomcat-6\conf\tomcat-users.xml''. Add a new entry for the user ''guest'' (if does not already exist) and add the role ''openMDXUser'' as shown below.

[[Image(Sdk24.StepByStepTomcat.pic120.gif)]]

Finally start ''Tomcat+EJB'' by clicking the ''Start Tomcat+EJB'' shortcut. This starts ''Tomcat+EJB'' and deploys the application ''helloworld''. The console output should look as shown below.

[[Image(Sdk24.StepByStepTomcat.pic130.gif)]]

Next click in the ''Login Tomcat LWC'' shortcut. This launches a browser with the ''Tomcat+EJB'' main URL. Complete the URL by adding ''openmdx-helloworld''/. This opens the ''helloworld'' login page. Enter the user ''guest'' and the password which you have defined in the ''tomcat-users.xml''.

[[Image(Sdk24.StepByStepTomcat.pic140.gif)]]

The main page of the ''helloworld'' application is shown after successful login. The GUI of the ''helloworld'' application uses the generic ''openMDX/Portal'' GUI. The GUI is not customized, that's why labels and icons do not look very user-friendly. However, the GUI is fully workable.

[[Image(Sdk24.StepByStepTomcat.pic150.gif)]]

In order to test the ''sayHello()'' operation, go to the menu ''Pane:Op:90000'' and select the menu entry ''Pane:Op:Tab:sayHello'' as shown below:

[[Image(Sdk24.StepByStepTomcat.pic160.gif)]]

The ''sayHello()'' operation takes as parameter the language which makes ''helloworld'' to return a language-specific ''Say Hello'' text. Enter one of the languages ''de'', ''en'' or ''fr'' and click ''OK''.

[[Image(Sdk24.StepByStepTomcat.pic170.gif)]]

The GUI invokes the operation ''sayHello()'' which returns the ''Say Hello'' message as result which is shown below:

[[Image(Sdk24.StepByStepTomcat.pic180.gif)]]

Stop ''Tomcat'' by clicking on the ''Stop Tomcat+EJB'' shortcut.

In a next step we will build and deploy the ''workshop'' application. Go back to the shell and change to the directory ''.\openmdxSdk-2.4.0\openmdx-example-2.4.0\workshop''. Run the command ''ant assemble''.

[[Image(Sdk24.StepByStepTomcat.pic190.gif)]]

Next copy the EAR ''openmdx-example-workshop.ear'' from the directory ''.\openmdxSdk-2.4.0\openmdx-example-2.4.0\jre-1.5\workshop\deployment-unit'' to the directory ''.\openmdxTomcatLwc-2.4.0\apache-tomcat-6\apps'' as shown below:

[[Image(Sdk24.StepByStepTomcat.pic200.gif)]]

Because the ''workshop'' example accesses a database we have to add a JDBC datasource configuration to the ''OpenEJB'' configuration ''openejb.xml''. Open the file ''.\openmdxSdk-2.4.0\openmdx-example-2.4.0\workshop\src\connector\openejb-3\openejb.xml'' and copy/paste the configuration entry into the file ''.\openmdxTomcatLwc-2.4.0\apache-tomcat-6\conf\openejb.xml'' as shown below:

[[Image(Sdk24.StepByStepTomcat.pic210.gif)]]

Compare the contents of your ''apps'' directory with the directory structure shown below:

[[Image(Sdk24.StepByStepTomcat.pic230.gif)]]

Before restarting ''Tomcat+EJB'' clean the contents of the directory ''work'' and ''temp''. This makes sure that we do not deploy old files.

Start ''Tomcat+EJB'' by clicking on the ''Start Tomcat+EJB'' shortcut.

[[Image(Sdk24.StepByStepTomcat.pic250.gif)]]

Launch a browser, complete the URL with the suffix ''openmdx-workshop''/ and login as ''guest'':

[[Image(Sdk24.StepByStepTomcat.pic260.gif)]]

Next you should see the main page of the workshop application:

[[Image(Sdk24.StepByStepTomcat.pic290.gif)]]

The project comes with some basic customizing. E.g. it comes with a wizard which can be launched from the menu item ''Wizards > Create New Project...''. A wizard is a user-defined GUI extension. Wizards are a powerful and flexbile way to extend the standard ''openMDX/Portal GUI''. Wizards are implemented as standard ''JSPs'' and as such have access to the full functionality of the application's API. The source code of the wizard is located in the directory ''.\openmdxSdk-2.4.0\openmdx-example-2.4.0\workshop\src\data\org.openmdx.example\wizards\en_US''.

[[Image(Sdk24.StepByStepTomcat.pic300.gif)]]

Before we can use the wizard we have to create the team member ''The Boss''. In the tab ''Team Members'' select ''New > Team Member'' and fill out the form as shown below:

[[Image(Sdk24.StepByStepTomcat.pic310.gif)]]

Next launch the wizard. Enter values for project name, project manager and project tasks and click OK. After successful completion the wizards returns to the standard GUI which displays the newly created objects.

[[Image(Sdk24.StepByStepTomcat.pic320.gif)]]

== Congratulations ==
Congratulations! You have successfully built and deployed the ''openMDX SDK 2.4 / 2.5'' projects on ''Tomcat+EJB''.